
trigger:
- main

pool:
    vmImage: 'ubuntu-latest'

variables:
  tag: '$(Build.BuildId)'
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET Core SDK'
      inputs:
        packageType: sdk
        version: 6.x
        performMultiLevelLookup: true
        includePreviewVersions: true # Required for preview versions
        
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: Docker@2
      displayName: 'Docker Image build and Push'
      inputs:
        containerRegistry: 'AzureAcrService'
        repository: 'cedricdemodeployaks'
        command: 'buildAndPush'
        Dockerfile: '*/Dockerfile'
        tags: '$(tag)'
      
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/K8s'
        artifact: 'manifests'
        publishLocation: 'pipeline'

- stage: Deploy
  displayName: 'Kubernetes DeployMent'
  dependsOn: Build
  jobs:
  - job: Deploy
    pool:
     vmImage: 'ubuntu-latest'
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          targetPath: '$(Pipeline.Workspace)/manifests'
        
      - task: KubernetesManifest@0
        inputs:
          action: 'createSecret'
          kubernetesServiceConnection: 'myAKSService'
          namespace: 'default'
          secretType: 'dockerRegistry'
          secretName: 'acrsecret'
          dockerRegistryEndpoint: 'AzureAcrService'
        
      - task: KubernetesManifest@0
        inputs:
          action: 'deploy'
          kubernetesServiceConnection: 'myAKSService'
          namespace: 'default'
          manifests: |
             $(Pipeline.Workspace)/manifests/deployment.yml
             $(Pipeline.Workspace)/manifests/service.yml